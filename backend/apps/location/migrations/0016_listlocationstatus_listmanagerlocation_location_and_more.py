# Generated by Django 4.0.7 on 2022-11-21 13:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('user', '0023_remove_user_my_location'),
        ('base', '0011_eventlocationtype'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('location', '0015_delete_location_delete_locationcategory_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ListLocationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('commentary', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Статус спортивной площадки',
                'verbose_name_plural': 'Статусы спортивной площадки',
            },
        ),
        migrations.CreateModel(
            name='ListManagerLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Менеджер спортивной площадки',
                'verbose_name_plural': 'Менеджеры спортивной площадки',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=1020, verbose_name='Полное наименование объекта')),
                ('short_name', models.CharField(blank=True, max_length=510, null=True, verbose_name='Сокращенное наименование объекта')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Стоимость (в час)')),
                ('length', models.PositiveIntegerField(verbose_name='Длина')),
                ('width', models.PositiveIntegerField(verbose_name='Ширина')),
                ('squad', models.PositiveIntegerField(verbose_name='Площадь')),
                ('is_covered', models.BooleanField(default=False, verbose_name='Крытая площадка')),
                ('phone', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('additional_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Доп. номер телефона')),
                ('additional_phone_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Доп. код для дополнительного номера')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронный адрес площадки')),
                ('web_site', models.URLField(blank=True, null=True, verbose_name='Веб сайт площадки')),
                ('created_date', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='location.locationaddress', verbose_name='Адрес')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.locationcategory', verbose_name='Категория')),
                ('coating', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.locationcoating', verbose_name='Покрытие')),
                ('images', models.ManyToManyField(to='base.file', verbose_name='Изображения площадки')),
            ],
            options={
                'verbose_name': 'Спортивная площадка',
                'verbose_name_plural': 'Спортивные площадки',
            },
        ),
        migrations.CreateModel(
            name='LocationKeyWords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Ключевое слово')),
            ],
            options={
                'verbose_name': 'Ключевое слово спортивной площадки (Создается автоматически с фронта)',
                'verbose_name_plural': 'Ключевые слова спортивной площадки (Создаются автоматически с фронта)',
            },
        ),
        migrations.CreateModel(
            name='LocationOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Опция спортивной площадки (Создается автоматически с фронта)',
                'verbose_name_plural': 'Опции спортивной площадки (Создаются автоматически с фронта)',
            },
        ),
        migrations.DeleteModel(
            name='LocationStatus',
        ),
        migrations.AddField(
            model_name='location',
            name='keywords',
            field=models.ManyToManyField(to='location.locationkeywords', verbose_name='Ключевые слова'),
        ),
        migrations.AddField(
            model_name='location',
            name='lighting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.locationlight', verbose_name='Освещение'),
        ),
        migrations.AddField(
            model_name='location',
            name='managers',
            field=models.ManyToManyField(related_name='managers', through='location.ListManagerLocation', to=settings.AUTH_USER_MODEL, verbose_name='Менеджеры'),
        ),
        migrations.AddField(
            model_name='location',
            name='options',
            field=models.ManyToManyField(to='location.locationoptions', verbose_name='Опции спортивной площадки'),
        ),
        migrations.AddField(
            model_name='location',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Владелец спортивной площадки'),
        ),
        migrations.AddField(
            model_name='location',
            name='sport_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.locationsporttype', verbose_name='Вид спорта'),
        ),
        migrations.AddField(
            model_name='location',
            name='statuses',
            field=models.ManyToManyField(through='location.ListLocationStatus', to='base.status', verbose_name='Cтатусы'),
        ),
        migrations.AddField(
            model_name='location',
            name='work_time',
            field=models.ManyToManyField(to='location.worktimelocation', verbose_name='Время работы'),
        ),
        migrations.AddField(
            model_name='listmanagerlocation',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listmanagerlocation', to='location.location', verbose_name='Спортивная площадка'),
        ),
        migrations.AddField(
            model_name='listmanagerlocation',
            name='root',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission', verbose_name='Права пользователя'),
        ),
        migrations.AddField(
            model_name='listmanagerlocation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='listmanagerlocation',
            name='user_assigned',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь назначивший права'),
        ),
        migrations.AddField(
            model_name='listlocationstatus',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listlocationstatus', to='location.location', verbose_name='Спортивная площадка'),
        ),
        migrations.AddField(
            model_name='listlocationstatus',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.status', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='listlocationstatus',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
